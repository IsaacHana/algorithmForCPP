#include <bits/stdc++.h>
using namespace std;

long long dp[2][92];

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    // 1.0으로 시작 X
    // 2.전 수의 끝이 1이라면 1은 추가 못한다.

    // 1 1
    // 2 10 전꺼에서 우측에 (0,1) 추가 그러나 11은 2번 위배
    // 3 100, 101
    // 4 1000, 1001, 1010 전꺼에서 우측에 (0,1) 추가 그러나 1011은 2번 위배
    // 5 10000, 10001, 10010, 10100, 10101
    // 8 100000, 100001, 100010, 100100, 100101, 101000, 101001, 101010

    // 끝자리가 0인 수는 전에 모든수에서 추가 가능
    // 끝이 1인 수는 전에 끝이 0인 수에서 만큼 생기게 된다.

    // 0 : 1 끝자리가 0인지 1인지
    // 0   1
    // 1   0
    // 1   1
    // 2   1
    // 3   2
    // 5   3
    // 8   5

    int n;
    cin >> n;
    dp[1][1] = 1LL;

    for (int i = 2; i <= n; i++) {
        dp[0][i] = dp[0][i - 1] + dp[1][i - 1];
        dp[1][i] = dp[0][i - 1];
    }
    cout << dp[0][n] + dp[1][n] << '\n';
}